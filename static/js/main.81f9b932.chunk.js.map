{"version":3,"sources":["img/logo.png","redux/actions/index.js","pages/Login.js","components/Header.js","components/Table.js","components/WalletForm.js","pages/Wallet.js","App.js","serviceWorker.js","redux/reducers/user.js","redux/reducers/wallet.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","Login","checkEmail","emailInput","RegExp","test","checkLogin","target","setState","name","value","state","passWordlInput","length","buttonLogin","saveLogin","addEmail","props","login","this","className","src","logo","alt","htmlFor","id","placeholder","type","data-testid","onChange","disabled","onClick","to","React","Component","connect","dispatch","payload","Header","soma","valores","toFixed","reduce","prev","curr","exchangeRates","currency","Number","ask","email","user","wallet","expenses","Table","tableValues","desp","valueInput","removeitem","remove","despesas","map","key","description","tag","method","WalletForm","saveForm","saveExpenses","handleChange","checked","getcoin","coins","coin","currencies","cota","fetch","resolve","json","data","dataCoin","Object","keys","endDataCoin","filter","demiss","fetCotation","Wallet","App","path","component","exact","Boolean","window","location","hostname","match","INITIAL_STATE","action","expense","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Cypress","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.81f9b932.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fe0a0b9e.png\";","// Coloque aqui suas actions\nexport const LOGIN = 'LOGIN';\nexport const GET_COINS = 'GET_COINS';\nexport const SAVE_DISMISS = 'SAVE_DISMISS';\nexport const DELETE_DISMISS = 'DELETE_DISMISS';\n\nexport const onLogin = (email) => ({\n  type: LOGIN,\n  payload: email,\n});\n\nexport const getCoins = (coinsList) => ({\n  type: GET_COINS,\n  payload: coinsList,\n});\n\nexport const saveDismiss = (coin) => ({\n  type: SAVE_DISMISS,\n  payload: coin,\n});\nexport const deleteDismiss = (id) => ({\n  type: DELETE_DISMISS,\n  payload: id,\n});\n\nexport function fetCoin() {\n  return async (dispatch) => {\n    const resolve = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const data = await resolve.json();\n    const dataCoin = Object.keys(data);\n    const endDataCoin = dataCoin.filter((coin) => (\n      coin !== 'USDT'\n    ));\n    dispatch(getCoins(endDataCoin));\n  };\n}\n\nexport function fetCotation(demiss) {\n  return async (dispatch) => {\n    const resolve = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const data = await resolve.json();\n    demiss.exchangeRates = data;\n    dispatch(saveDismiss(demiss));\n  };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { onLogin } from '../redux/actions';\nimport logo from '../img/logo.png';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      emailInput: '',\n      passWordlInput: '',\n      buttonLogin: true,\n      login: false,\n    };\n  }\n\n  checkEmail = (emailInput) => {\n    const validEmail = new RegExp(\n      '^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$',\n    );\n    return validEmail.test(emailInput);\n  }\n\n  checkLogin = ({ target }) => {\n    this.setState({\n      [target.name]: target.value,\n    }, () => {\n      const minPass = 6;\n      const { emailInput, passWordlInput } = this.state;\n\n      if (this.checkEmail(emailInput) && passWordlInput.length >= minPass) {\n        return this.setState({\n          buttonLogin: false,\n        });\n      }\n      return this.setState({\n        buttonLogin: true,\n      });\n    });\n  }\n\n  saveLogin = () => {\n    const { addEmail } = this.props;\n    const { emailInput } = this.state;\n    addEmail(emailInput);\n    this.setState({\n      login: true,\n    });\n  }\n\n  render() {\n    const { buttonLogin, emailInput, passWordlInput, login } = this.state;\n    return (\n      <div className=\"loginConteiner\">\n        <div className=\"logoName\">\n          <img src={ logo } alt=\"logo\" className=\"logo\" />\n          <h2> Trybe Wallet </h2>\n        </div>\n        <div className=\"Login\">\n          <h1> Login </h1>\n          <form className=\"formLogin\">\n            <label htmlFor=\"emailInput\">\n              <input\n                className=\"inputLogin\"\n                id=\"emailInput\"\n                name=\"emailInput\"\n                placeholder=\"exemplo@email.com\"\n                type=\"email\"\n                data-testid=\"email-input\"\n                onChange={ this.checkLogin }\n                value={ emailInput }\n              />\n            </label>\n            <label htmlFor=\"passWordlInput\">\n              <input\n                className=\"inputLogin\"\n                placeholder=\"Senha de 6 digitos\"\n                id=\"passWordlInput\"\n                name=\"passWordlInput\"\n                type=\"password\"\n                data-testid=\"password-input\"\n                onChange={ this.checkLogin }\n                value={ passWordlInput }\n              />\n            </label>\n            <button\n              className=\"buttonLogin\"\n              type=\"button\"\n              disabled={ buttonLogin }\n              onClick={ () => this.saveLogin() }\n            >\n              Entrar\n            </button>\n          </form>\n        </div>\n\n        {login ? <Redirect to=\"/carteira\" /> : <> </>}\n      </div>);\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addEmail: (payload) => {\n    dispatch(onLogin(payload));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nLogin.propTypes = {\n  addEmail: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // valorTotal: 0,\n    };\n  }\n\n  soma = () => {\n    const { valores } = this.props;\n    const initial = 0;\n    if (valores.length === 0) {\n      return initial.toFixed(2);\n    }\n    const total = valores.reduce((prev, curr) => {\n      const { value, exchangeRates, currency } = curr;\n      const valor = Number(value);\n      const cambio = Number(exchangeRates[currency].ask);\n      const valorConvertido = valor * cambio;\n      return prev + valorConvertido;\n    }, 0);\n    return total.toFixed(2);\n  }\n\n  render() {\n    const { email } = this.props;\n\n    return (\n      <div className=\"header\">\n        <h3 data-testid=\"email-field\">\n          {' '}\n          {`EMAIL: ${email}`}\n          {' '}\n        </h3>\n        <div className=\"valueContainer\">\n          {email.length === 0 ? <Redirect to=\"/\" /> : <> </>}\n          <div>\n            <h4\n              className=\"value\"\n              data-testid=\"total-field\"\n            >\n              { `R$ ${this.soma()}` }\n\n            </h4>\n            <h4\n              className=\"value\"\n              data-testid=\"header-currency-field\"\n            >\n              BRL\n\n            </h4>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  valores: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(Header);\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  valores: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteDismiss } from '../redux/actions';\n\nclass Table extends Component {\n  tableValues = (desp, exchangeRates) => {\n    if (exchangeRates === null) {\n      const { ask } = desp.exchangeRates[desp.currency];\n      const test = Number(ask);\n      return test.toFixed(2);\n    }\n    const { value, currency } = desp;\n    const { ask } = exchangeRates[currency];\n    const result = value * ask;\n    return result.toFixed(2);\n  }\n\n  valueInput = (value) => {\n    const valueF = Number(value);\n    return valueF.toFixed(2);\n  }\n\n  removeitem = (id) => {\n    const { remove } = this.props;\n    remove(id);\n  }\n\n  render() {\n    const { despesas } = this.props;\n\n    // if (despesas.length === 0) {\n    //   return <> </>;\n    // }\n    return (\n      <table className=\"table-responsive\">\n        <thead>\n          <tr>\n            <th className=\"table\"> Descrição </th>\n            <th className=\"table\"> Tag </th>\n            <th className=\"table\"> Método de pagamento </th>\n            <th className=\"table\"> Valor </th>\n            <th className=\"table\"> Moeda </th>\n            <th className=\"table\"> Câmbio utilizado </th>\n            <th className=\"table\"> Valor convertido </th>\n            <th className=\"table\"> Moeda de conversão </th>\n            <th className=\"table\"> Editar/Excluir </th>\n          </tr>\n        </thead>\n        <tbody>\n          {despesas.map((desp) => (\n            <tr key={ desp.id }>\n              <td className=\"despTable\">{ desp.description }</td>\n              <td className=\"despTable\">{ desp.tag }</td>\n              <td className=\"despTable\">{ desp.method }</td>\n              <td className=\"despTable\">{ this.valueInput(desp.value) }</td>\n              <td className=\"despTable\">{ desp.exchangeRates[desp.currency].name }</td>\n              <td className=\"despTable\">{ this.tableValues(desp, null) }</td>\n              <td className=\"despTable\">\n                {' '}\n                { this.tableValues(desp, desp.exchangeRates) }\n              </td>\n              <td className=\"despTable\">Real</td>\n              <td className=\"despTable\">\n                <button\n                  data-testid=\"delete-btn\"\n                  type=\"button\"\n                  onClick={ () => this.removeitem(desp.id) }\n                >\n                  Deletar\n                </button>\n\n              </td>\n            </tr>\n          ))}\n        </tbody>\n\n      </table>\n\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  despesas: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  remove: (payload) => {\n    dispatch(deleteDismiss(payload));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n\nTable.propTypes = {\n  despesas: PropTypes.arrayOf(PropTypes.object).isRequired,\n  remove: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetCoin, fetCotation } from '../redux/actions';\n\nconst alimentação = 'Alimentação';\n\nclass WalletForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: 0,\n      value: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: alimentação,\n      description: '',\n    };\n  }\n\n  componentDidMount() {\n    const { getcoin } = this.props;\n    getcoin();\n  }\n\n  saveForm = () => {\n    const { saveExpenses } = this.props;\n    const { id, value, description, method, currency, tag } = this.state;\n    this.setState((prev) => ({\n      id: prev.id + 1,\n    }));\n    const demiss = { id, value, description, method, currency, tag };\n    saveExpenses(demiss);\n    this.setState({\n      value: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: alimentação,\n      description: '',\n    });\n  }\n\n  handleChange = ({ target }) => {\n    const value = target.type === 'checkbox'\n      ? target.checked\n      : target.value;\n    this.setState({\n      [target.name]: value,\n    });\n  }\n\n  render() {\n    const { coins } = this.props;\n    const { value, description, method, currency, tag } = this.state;\n    // console.log(coins); na primeira renderização coin e um array vazio\n    return (\n      <div className=\"\">\n        <h1>Wallet</h1>\n        <h3>\n          Digite o valor e uma descrição de compra, o app convertera os valores da moeda selecionada para BRL.\n        </h3>\n        <form>\n          <label htmlFor=\"value\">\n            <input\n              className=\"inputLogin\"\n              placeholder=\"Valor\"\n              data-testid=\"value-input\"\n              type=\"number\"\n              id=\"value\"\n              onChange={ this.handleChange }\n              value={ value }\n              name=\"value\"\n            />\n          </label>\n          <label htmlFor=\"description\">\n            <input\n              className=\"inputLogin\"\n              placeholder=\"Descrição\"\n              data-testid=\"description-input\"\n              type=\"text\"\n              id=\"description\"\n              onChange={ this.handleChange }\n              value={ description }\n              name=\"description\"\n            />\n          </label>\n          <select\n            className=\"inputLogin\"\n            name=\"currency\"\n            data-testid=\"currency-input\"\n            onChange={ this.handleChange }\n            value={ currency }\n          >\n            {coins.map((coin) => (\n              <option value={ coin } key={ coin }>\n                {coin}\n              </option>\n            ))}\n          </select>\n          <select\n            className=\"inputLogin\"\n            name=\"method\"\n            data-testid=\"method-input\"\n            onChange={ this.handleChange }\n            value={ method }\n          >\n            <option value=\"Dinheiro\"> Dinheiro </option>\n            <option value=\"Cartão de crédito\"> Cartão de crédito </option>\n            <option value=\"Cartão de débito\"> Cartão de débito </option>\n          </select>\n          <select\n            className=\"inputLogin\"\n            name=\"tag\"\n            data-testid=\"tag-input\"\n            onChange={ this.handleChange }\n            value={ tag }\n          >\n            <option value=\"Alimentação\"> Alimentação </option>\n            <option value=\"Lazer\"> Lazer </option>\n            <option value=\"Trabalho\"> Trabalho </option>\n            <option value=\"Transporte\"> Transporte </option>\n            <option value=\"Saúde\"> Saúde </option>\n          </select>\n          <button\n            className=\"buttonDespesa\"\n            type=\"button\"\n            onClick={ this.saveForm }\n          >\n            Adicionar despesa\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  coins: state.wallet.currencies,\n  valores: state.wallet.expenses,\n  cota: state.wallet.exchangeRates,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getcoin: () => {\n    dispatch(fetCoin());\n  },\n  saveExpenses: (demiss) => {\n    dispatch(fetCotation(demiss));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);\n\nWalletForm.propTypes = {\n  coins: PropTypes.arrayOf(PropTypes.string).isRequired,\n  getcoin: PropTypes.func.isRequired,\n  saveExpenses: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport Header from '../components/Header';\nimport Table from '../components/Table';\nimport WalletForm from '../components/WalletForm';\n\nclass Wallet extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"walletApp\">\n          <WalletForm />\n          <Table />\n        </div>\n      </div>);\n  }\n}\n\nexport default Wallet;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/\" component={ Login } exact />\n        <Route path=\"/carteira\" component={ Wallet } />\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { LOGIN } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case LOGIN:\n    return {\n      ...state,\n      email: action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n\nimport { GET_COINS, SAVE_DISMISS, DELETE_DISMISS } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case GET_COINS:\n    return {\n      ...state,\n      currencies: action.payload,\n    };\n  case SAVE_DISMISS:\n    return {\n      ...state,\n      expenses: [...state.expenses, action.payload],\n    };\n  case DELETE_DISMISS:\n    return {\n      ...state,\n      expenses: state.expenses.filter((expense) => (\n        expense.id !== action.payload\n      )),\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({\n  user,\n  wallet,\n});\n\nexport default rootReducer;\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}